format 224
"ServeurWeb" // station-notifications-lumineuses::lib::ServeurWeb
  revision 1
  modified_by 2 "btssn2"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "station-notifications-lumineuses/lib/ServeurWeb/"
  cpp_src_dir "station-notifications-lumineuses/lib/ServeurWeb/"
  classview 141186 "ServeurWeb"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 175362 "ServeurWeb"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@class ServeurWeb
@brief Déclaration de la classe ServeurWeb
"
      classrelation 163330 // <generalisation>
	relation 162434 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 163330 // <generalisation>
	  b parent class_ref 175874 // typedef2
      end

      classrelation 163458 // stationLumineuse (<unidirectional association>)
	relation 162562 --->
	  a role_name "stationLumineuse" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 163458 // stationLumineuse (<unidirectional association>)
	  b parent class_ref 175490 // StationLumineuse
      end

      attribute 167938 "documentJSON"
	private explicit_type "TAILLE_JSON"
	stereotype "StaticJsonDocument"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 167810 "setNom"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "nomStationLumineuse" explicit_type "String"
	    defaultvalue "NOM_SERVEUR_WEB"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Définit le nom du serveur web
//@fn ServeurWeb::setNom
//@param stationLumineuse
//@details Utilise le protocole mDNS pour définir le nom du serveur web.
//Le nom sera utilisé pour accéder au serveur via l'adresse http://nomStationLumineuse.local/.
//

//@brief Définit le nom du serveur web
//@fn ServeurWeb::setNom
//@param stationLumineuse
//@details Utilise le protocole mDNS pour définir le nom du serveur web.
//Le nom sera utilisé pour accéder au serveur via l'adresse http://nomStationLumineuse.local/.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 167938 "afficherAccueil"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Affiche la page d'accueil du serveur web
//@fn ServeurWeb::afficherAccueil
//@details Affiche la page d'accueil du serveur web contenant un titre
//\"Bienvenue sur la station de notifications lumineuses\" ainsi qu'un message indiquant
//la version de la station (\"LaSalle Avignon v0.1\"). La méthode utilise la fonction send()
//pour envoyer la réponse au client HTTP avec un code de statut 200 et un type de contenu
//\"text/html\"
//

//@brief Affiche la page d'accueil du serveur web
//@fn ServeurWeb::afficherAccueil
//@details Affiche la page d'accueil du serveur web contenant un titre
//\"Bienvenue sur la station de notifications lumineuses\" ainsi qu'un message indiquant
//la version de la station (\"LaSalle Avignon v0.1\"). La méthode utilise la fonction send()
//pour envoyer la réponse au client HTTP avec un code de statut 200 et un type de contenu
//\"text/html\"
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168066 "traiterRequeteGETNotifications"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite la requête GET pour obtenir l'état des notifications
//@fn ServeurWeb::traiterRequeteGETNotifications
//@details Crée un objet JSON contenant l'état de la boîte aux lettres, des machines et des
//poubelles. Elle utilise les méthodes getEtatBoiteAuxLettres(), getEtatMachines() et
//getEtatPoubelle() de l'objet stationLumineuse pour remplir l'objet JSON. Ensuite, elle sérialise
//cet objet JSON et le renvoie en tant que réponse à la requête GET sous forme d'un document JSON.
//

//@brief Traite la requête GET pour obtenir l'état des notifications
//@fn ServeurWeb::traiterRequeteGETNotifications
//@details Crée un objet JSON contenant l'état de la boîte aux lettres, des machines et des
//poubelles. Elle utilise les méthodes getEtatBoiteAuxLettres(), getEtatMachines() et
//getEtatPoubelle() de l'objet stationLumineuse pour remplir l'objet JSON. Ensuite, elle sérialise
//cet objet JSON et le renvoie en tant que réponse à la requête GET sous forme d'un document JSON.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168194 "traiterRequeteGETBoite"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite une requête HTTP GET relative à la boîte aux lettres
//@fn ServeurWeb::traiterRequeteGETBoite
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à la boîte aux
//lettres est reçue par le serveur web.
//

//@brief Traite une requête HTTP GET relative à la boîte aux lettres
//@fn ServeurWeb::traiterRequeteGETBoite
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à la boîte aux
//lettres est reçue par le serveur web.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168322 "traiterRequetePOSTBoite"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite la requête POST de la boîte aux lettres
//@fn ServeurWeb::traiterRequetePOSTBoite
//@details Récupère la demande POST de la boîte aux lettres envoyée par le client et vérifie si
//elle est correcte. Ensuite, détermine l'état de la boîte aux lettres et l'enregistre dans l'objet
//StationLumineuse. Si la demande est correcte, envoie une réponse JSON de confirmation au client. Si
//la demande est incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

//@brief Traite la requête POST de la boîte aux lettres
//@fn ServeurWeb::traiterRequetePOSTBoite
//@details Récupère la demande POST de la boîte aux lettres envoyée par le client et vérifie si
//elle est correcte. Ensuite, détermine l'état de la boîte aux lettres et l'enregistre dans l'objet
//StationLumineuse. Si la demande est correcte, envoie une réponse JSON de confirmation au client. Si
//la demande est incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168450 "traiterRequeteGETMachine"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite une requête HTTP GET relative à une machine
//@fn ServeurWeb::traiterRequeteGETMachine
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à une machine est reçue
//par le serveur web.
//

//@brief Traite une requête HTTP GET relative à une machine
//@fn ServeurWeb::traiterRequeteGETMachine
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à une machine est reçue
//par le serveur web.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168578 "traiterRequetePOSTMachine"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite la requête POST pour modifier l'état d'une machine
//@fn ServeurWeb::traiterRequetePOSTMachine
//@details Récupère la demande POST de la machine envoyée par le client et vérifie si elle est
//correcte. Ensuite, détermine l'état de la machine et l'enregistre dans l'objet StationLumineuse. Si
//la demande est correcte, envoie une réponse JSON de confirmation au client. Si la demande est
//incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

//@brief Traite la requête POST pour modifier l'état d'une machine
//@fn ServeurWeb::traiterRequetePOSTMachine
//@details Récupère la demande POST de la machine envoyée par le client et vérifie si elle est
//correcte. Ensuite, détermine l'état de la machine et l'enregistre dans l'objet StationLumineuse. Si
//la demande est correcte, envoie une réponse JSON de confirmation au client. Si la demande est
//incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168706 "traiterRequeteGETPoubelle"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite une requête HTTP GET relative à une poubelle
//@fn ServeurWeb::traiterRequeteGETPoubelle
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à une poubelle est reçue
//par le serveur web.
//

//@brief Traite une requête HTTP GET relative à une poubelle
//@fn ServeurWeb::traiterRequeteGETPoubelle
//@details Cette méthode est appelée lorsqu'une requête HTTP GET relative à une poubelle est reçue
//par le serveur web.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168834 "traiterRequetePOSTPoubelle"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite la requête POST pour modifier l'état d'une poubelle
//@fn ServeurWeb::traiterRequetePOSTPoubelle
//@details Récupère la demande POST de la poubelle envoyée par le client et vérifie si elle est
//correcte. Ensuite, détermine l'état de la poubelle et l'enregistre dans l'objet StationLumineuse.
//Si la demande est correcte, envoie une réponse JSON de confirmation au client.
//Si la demande est incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

//@brief Traite la requête POST pour modifier l'état d'une poubelle
//@fn ServeurWeb::traiterRequetePOSTPoubelle
//@details Récupère la demande POST de la poubelle envoyée par le client et vérifie si elle est
//correcte. Ensuite, détermine l'état de la poubelle et l'enregistre dans l'objet StationLumineuse.
//Si la demande est correcte, envoie une réponse JSON de confirmation au client.
//Si la demande est incorrecte, envoie une réponse JSON d'erreur correspondante au client.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 168962 "traiterRequeteNonTrouvee"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Traite une requête qui n'a pas été trouvée
//@fn ServeurWeb::traiterRequeteNonTrouvee
//@details Récupère les informations de la requête (URI, méthode, arguments) et les concatène dans
//un message d'erreur de type 404. Envoie ensuite ce message au client qui a effectué la requête.
//

//@brief Traite une requête qui n'a pas été trouvée
//@fn ServeurWeb::traiterRequeteNonTrouvee
//@details Récupère les informations de la requête (URI, méthode, arguments) et les concatène dans
//un message d'erreur de type 404. Envoie ensuite ce message au client qui a effectué la requête.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 169090 "ServeurWeb"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "stationLumineuse" type class_ref 175490 // StationLumineuse
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Constructeur de la classe ServeurWeb
//@fn ServeurWeb::ServeurWeb
//@param stationLumineuse
//@details Initialise un serveur web sur le port PORT_SERVEUR_WEB et l'association avec la classe
//StationLumineuse
//

//@brief Constructeur de la classe ServeurWeb
//@fn ServeurWeb::ServeurWeb
//@param stationLumineuse
//@details Initialise un serveur web sur le port PORT_SERVEUR_WEB et l'association avec la classe
//StationLumineuse
//

${inline}${typeprefix}${class}::${name}${(}${t0} * ${p0}${)} :
    WebServer(PORT_SERVEUR_WEB), stationLumineuse(stationLumineuse)
 :
    WebServer(PORT_SERVEUR_WEB), stationLumineuse(stationLumineuse)
${throw}{
${body}}
"
	
	
	
	
      end

      operation 169218 "demarrer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief Démarre le serveur web et installe les gestionnaires de requêtes
//@fn ServeurWeb::demarrer
//@details Configure les routes pour les différentes requêtes HTTP
//et démarre le serveur web. Elle utilise des fonctions de liaison std::bind pour attacher les
//méthodes membres à chaque route.
//

//@brief Démarre le serveur web et installe les gestionnaires de requêtes
//@fn ServeurWeb::demarrer
//@details Configure les routes pour les différentes requêtes HTTP
//et démarre le serveur web. Elle utilise des fonctions de liaison std::bind pour attacher les
//méthodes membres à chaque route.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end

      operation 169346 "traiterRequetes"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief traite les requêtes reçues par le serveur web
//@fn ServeurWeb::traiterRequetes
//@details Appelle la méthode handleClient() du serveur web pour traiter les requêtes reçues par le
//serveur.
//

//@brief traite les requêtes reçues par le serveur web
//@fn ServeurWeb::traiterRequetes
//@details Appelle la méthode handleClient() du serveur web pour traiter les requêtes reçues par le
//serveur.
//

${inline}${typeprefix}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
      end
    end

    class 175874 "typedef2"
      visibility package stereotype "typedef" explicit_base_type "WebServer"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 141186 "ServeurWeb"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 141826 "ServeurWeb"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 175874 // typedef2
	class_ref 175362 // ServeurWeb
      end
    end
  end
end
